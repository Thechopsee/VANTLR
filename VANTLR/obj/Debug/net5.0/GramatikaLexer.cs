//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ValMe\Desktop\VANTLR\VANTLR\Gramatika.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace VANTLR {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class GramatikaLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, DATA_TYPE=8, INT_KEY=9, 
		FLT_KEY=10, BLN_KEY=11, STR_KEY=12, ADD=13, SUB=14, MUL=15, DIV=16, NOT=17, 
		MOD=18, CCT=19, LTN=20, MTN=21, EQL=22, NEQ=23, AND=24, OR=25, IF=26, 
		ELSE=27, WHILE=28, WRITE=29, READ=30, BOOLEAN=31, IDENTIFIER=32, INTEGER=33, 
		FLOAT=34, STRING=35, LINE_COMMENT=36, WHITE_SPACES=37;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "DATA_TYPE", "INT_KEY", 
		"FLT_KEY", "BLN_KEY", "STR_KEY", "ADD", "SUB", "MUL", "DIV", "NOT", "MOD", 
		"CCT", "LTN", "MTN", "EQL", "NEQ", "AND", "OR", "IF", "ELSE", "WHILE", 
		"WRITE", "READ", "BOOLEAN", "IDENTIFIER", "LETTER", "INTEGER", "FLOAT", 
		"DIGIT", "STRING", "ESCAPE_CHARACTER", "LINE_COMMENT", "WHITE_SPACES"
	};


	public GramatikaLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "','", "';'", "'('", "')'", "'='", null, "'int'", 
		"'float'", "'bool'", "'string'", "'+'", "'-'", "'*'", "'/'", null, "'%'", 
		"'.'", "'<'", "'>'", "'=='", "'!='", null, null, "'if'", "'else'", "'while'", 
		"'write'", "'read'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "DATA_TYPE", "INT_KEY", 
		"FLT_KEY", "BLN_KEY", "STR_KEY", "ADD", "SUB", "MUL", "DIV", "NOT", "MOD", 
		"CCT", "LTN", "MTN", "EQL", "NEQ", "AND", "OR", "IF", "ELSE", "WHILE", 
		"WRITE", "READ", "BOOLEAN", "IDENTIFIER", "INTEGER", "FLOAT", "STRING", 
		"LINE_COMMENT", "WHITE_SPACES"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Gramatika.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\x112\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x5\t\x66\n\t\x3\n\x3\n\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x12\x3\x12\x5\x12\x8A\n\x12\x3\x13\x3\x13\x3\x14\x3\x14"+
		"\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18"+
		"\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x5\x19\x9F\n\x19\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x5\x1A\xA5\n\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3"+
		" \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x5 \xC9\n \x3!\x3!\x3!\a!\xCE\n!\f!\xE!"+
		"\xD1\v!\x3\"\x5\"\xD4\n\"\x3#\x6#\xD7\n#\r#\xE#\xD8\x3$\x6$\xDC\n$\r$"+
		"\xE$\xDD\x3$\x3$\a$\xE2\n$\f$\xE$\xE5\v$\x3$\x3$\x6$\xE9\n$\r$\xE$\xEA"+
		"\x5$\xED\n$\x3%\x3%\x3&\x3&\x3&\a&\xF4\n&\f&\xE&\xF7\v&\x3&\x3&\x3\'\x3"+
		"\'\x3\'\x3\'\x5\'\xFF\n\'\x3(\x3(\x3(\x3(\a(\x105\n(\f(\xE(\x108\v(\x3"+
		"(\x3(\x3)\x6)\x10D\n)\r)\xE)\x10E\x3)\x3)\x3\xF5\x2\x2*\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2\x2\x45\x2"+
		"#G\x2$I\x2\x2K\x2%M\x2\x2O\x2&Q\x2\'\x3\x2\x6\x4\x2\x43\\\x63|\x3\x2\x32"+
		";\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x121\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2"+
		"\x2G\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x3S\x3"+
		"\x2\x2\x2\x5U\x3\x2\x2\x2\aW\x3\x2\x2\x2\tY\x3\x2\x2\x2\v[\x3\x2\x2\x2"+
		"\r]\x3\x2\x2\x2\xF_\x3\x2\x2\x2\x11\x65\x3\x2\x2\x2\x13g\x3\x2\x2\x2\x15"+
		"k\x3\x2\x2\x2\x17q\x3\x2\x2\x2\x19v\x3\x2\x2\x2\x1B}\x3\x2\x2\x2\x1D\x7F"+
		"\x3\x2\x2\x2\x1F\x81\x3\x2\x2\x2!\x83\x3\x2\x2\x2#\x89\x3\x2\x2\x2%\x8B"+
		"\x3\x2\x2\x2\'\x8D\x3\x2\x2\x2)\x8F\x3\x2\x2\x2+\x91\x3\x2\x2\x2-\x93"+
		"\x3\x2\x2\x2/\x96\x3\x2\x2\x2\x31\x9E\x3\x2\x2\x2\x33\xA4\x3\x2\x2\x2"+
		"\x35\xA6\x3\x2\x2\x2\x37\xA9\x3\x2\x2\x2\x39\xAE\x3\x2\x2\x2;\xB4\x3\x2"+
		"\x2\x2=\xBA\x3\x2\x2\x2?\xC8\x3\x2\x2\x2\x41\xCA\x3\x2\x2\x2\x43\xD3\x3"+
		"\x2\x2\x2\x45\xD6\x3\x2\x2\x2G\xEC\x3\x2\x2\x2I\xEE\x3\x2\x2\x2K\xF0\x3"+
		"\x2\x2\x2M\xFE\x3\x2\x2\x2O\x100\x3\x2\x2\x2Q\x10C\x3\x2\x2\x2ST\a}\x2"+
		"\x2T\x4\x3\x2\x2\x2UV\a\x7F\x2\x2V\x6\x3\x2\x2\x2WX\a.\x2\x2X\b\x3\x2"+
		"\x2\x2YZ\a=\x2\x2Z\n\x3\x2\x2\x2[\\\a*\x2\x2\\\f\x3\x2\x2\x2]^\a+\x2\x2"+
		"^\xE\x3\x2\x2\x2_`\a?\x2\x2`\x10\x3\x2\x2\x2\x61\x66\x5\x13\n\x2\x62\x66"+
		"\x5\x15\v\x2\x63\x66\x5\x17\f\x2\x64\x66\x5\x19\r\x2\x65\x61\x3\x2\x2"+
		"\x2\x65\x62\x3\x2\x2\x2\x65\x63\x3\x2\x2\x2\x65\x64\x3\x2\x2\x2\x66\x12"+
		"\x3\x2\x2\x2gh\ak\x2\x2hi\ap\x2\x2ij\av\x2\x2j\x14\x3\x2\x2\x2kl\ah\x2"+
		"\x2lm\an\x2\x2mn\aq\x2\x2no\a\x63\x2\x2op\av\x2\x2p\x16\x3\x2\x2\x2qr"+
		"\a\x64\x2\x2rs\aq\x2\x2st\aq\x2\x2tu\an\x2\x2u\x18\x3\x2\x2\x2vw\au\x2"+
		"\x2wx\av\x2\x2xy\at\x2\x2yz\ak\x2\x2z{\ap\x2\x2{|\ai\x2\x2|\x1A\x3\x2"+
		"\x2\x2}~\a-\x2\x2~\x1C\x3\x2\x2\x2\x7F\x80\a/\x2\x2\x80\x1E\x3\x2\x2\x2"+
		"\x81\x82\a,\x2\x2\x82 \x3\x2\x2\x2\x83\x84\a\x31\x2\x2\x84\"\x3\x2\x2"+
		"\x2\x85\x8A\a#\x2\x2\x86\x87\ap\x2\x2\x87\x88\aq\x2\x2\x88\x8A\av\x2\x2"+
		"\x89\x85\x3\x2\x2\x2\x89\x86\x3\x2\x2\x2\x8A$\x3\x2\x2\x2\x8B\x8C\a\'"+
		"\x2\x2\x8C&\x3\x2\x2\x2\x8D\x8E\a\x30\x2\x2\x8E(\x3\x2\x2\x2\x8F\x90\a"+
		">\x2\x2\x90*\x3\x2\x2\x2\x91\x92\a@\x2\x2\x92,\x3\x2\x2\x2\x93\x94\a?"+
		"\x2\x2\x94\x95\a?\x2\x2\x95.\x3\x2\x2\x2\x96\x97\a#\x2\x2\x97\x98\a?\x2"+
		"\x2\x98\x30\x3\x2\x2\x2\x99\x9A\a(\x2\x2\x9A\x9F\a(\x2\x2\x9B\x9C\a\x63"+
		"\x2\x2\x9C\x9D\ap\x2\x2\x9D\x9F\a\x66\x2\x2\x9E\x99\x3\x2\x2\x2\x9E\x9B"+
		"\x3\x2\x2\x2\x9F\x32\x3\x2\x2\x2\xA0\xA1\a~\x2\x2\xA1\xA5\a~\x2\x2\xA2"+
		"\xA3\aq\x2\x2\xA3\xA5\at\x2\x2\xA4\xA0\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2"+
		"\xA5\x34\x3\x2\x2\x2\xA6\xA7\ak\x2\x2\xA7\xA8\ah\x2\x2\xA8\x36\x3\x2\x2"+
		"\x2\xA9\xAA\ag\x2\x2\xAA\xAB\an\x2\x2\xAB\xAC\au\x2\x2\xAC\xAD\ag\x2\x2"+
		"\xAD\x38\x3\x2\x2\x2\xAE\xAF\ay\x2\x2\xAF\xB0\aj\x2\x2\xB0\xB1\ak\x2\x2"+
		"\xB1\xB2\an\x2\x2\xB2\xB3\ag\x2\x2\xB3:\x3\x2\x2\x2\xB4\xB5\ay\x2\x2\xB5"+
		"\xB6\at\x2\x2\xB6\xB7\ak\x2\x2\xB7\xB8\av\x2\x2\xB8\xB9\ag\x2\x2\xB9<"+
		"\x3\x2\x2\x2\xBA\xBB\at\x2\x2\xBB\xBC\ag\x2\x2\xBC\xBD\a\x63\x2\x2\xBD"+
		"\xBE\a\x66\x2\x2\xBE>\x3\x2\x2\x2\xBF\xC0\av\x2\x2\xC0\xC1\at\x2\x2\xC1"+
		"\xC2\aw\x2\x2\xC2\xC9\ag\x2\x2\xC3\xC4\ah\x2\x2\xC4\xC5\a\x63\x2\x2\xC5"+
		"\xC6\an\x2\x2\xC6\xC7\au\x2\x2\xC7\xC9\ag\x2\x2\xC8\xBF\x3\x2\x2\x2\xC8"+
		"\xC3\x3\x2\x2\x2\xC9@\x3\x2\x2\x2\xCA\xCF\x5\x43\"\x2\xCB\xCE\x5\x43\""+
		"\x2\xCC\xCE\x5I%\x2\xCD\xCB\x3\x2\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xD1\x3"+
		"\x2\x2\x2\xCF\xCD\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0\x42\x3\x2\x2\x2"+
		"\xD1\xCF\x3\x2\x2\x2\xD2\xD4\t\x2\x2\x2\xD3\xD2\x3\x2\x2\x2\xD4\x44\x3"+
		"\x2\x2\x2\xD5\xD7\x5I%\x2\xD6\xD5\x3\x2\x2\x2\xD7\xD8\x3\x2\x2\x2\xD8"+
		"\xD6\x3\x2\x2\x2\xD8\xD9\x3\x2\x2\x2\xD9\x46\x3\x2\x2\x2\xDA\xDC\x5I%"+
		"\x2\xDB\xDA\x3\x2\x2\x2\xDC\xDD\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE"+
		"\x3\x2\x2\x2\xDE\xDF\x3\x2\x2\x2\xDF\xE3\a\x30\x2\x2\xE0\xE2\x5I%\x2\xE1"+
		"\xE0\x3\x2\x2\x2\xE2\xE5\x3\x2\x2\x2\xE3\xE1\x3\x2\x2\x2\xE3\xE4\x3\x2"+
		"\x2\x2\xE4\xED\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE6\xE8\a\x30\x2\x2\xE7"+
		"\xE9\x5I%\x2\xE8\xE7\x3\x2\x2\x2\xE9\xEA\x3\x2\x2\x2\xEA\xE8\x3\x2\x2"+
		"\x2\xEA\xEB\x3\x2\x2\x2\xEB\xED\x3\x2\x2\x2\xEC\xDB\x3\x2\x2\x2\xEC\xE6"+
		"\x3\x2\x2\x2\xEDH\x3\x2\x2\x2\xEE\xEF\t\x3\x2\x2\xEFJ\x3\x2\x2\x2\xF0"+
		"\xF5\a$\x2\x2\xF1\xF4\x5M\'\x2\xF2\xF4\v\x2\x2\x2\xF3\xF1\x3\x2\x2\x2"+
		"\xF3\xF2\x3\x2\x2\x2\xF4\xF7\x3\x2\x2\x2\xF5\xF6\x3\x2\x2\x2\xF5\xF3\x3"+
		"\x2\x2\x2\xF6\xF8\x3\x2\x2\x2\xF7\xF5\x3\x2\x2\x2\xF8\xF9\a$\x2\x2\xF9"+
		"L\x3\x2\x2\x2\xFA\xFB\a^\x2\x2\xFB\xFF\a$\x2\x2\xFC\xFD\a^\x2\x2\xFD\xFF"+
		"\a^\x2\x2\xFE\xFA\x3\x2\x2\x2\xFE\xFC\x3\x2\x2\x2\xFFN\x3\x2\x2\x2\x100"+
		"\x101\a\x31\x2\x2\x101\x102\a\x31\x2\x2\x102\x106\x3\x2\x2\x2\x103\x105"+
		"\n\x4\x2\x2\x104\x103\x3\x2\x2\x2\x105\x108\x3\x2\x2\x2\x106\x104\x3\x2"+
		"\x2\x2\x106\x107\x3\x2\x2\x2\x107\x109\x3\x2\x2\x2\x108\x106\x3\x2\x2"+
		"\x2\x109\x10A\b(\x2\x2\x10AP\x3\x2\x2\x2\x10B\x10D\t\x5\x2\x2\x10C\x10B"+
		"\x3\x2\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10E\x10F\x3"+
		"\x2\x2\x2\x10F\x110\x3\x2\x2\x2\x110\x111\b)\x2\x2\x111R\x3\x2\x2\x2\x15"+
		"\x2\x65\x89\x9E\xA4\xC8\xCD\xCF\xD3\xD8\xDD\xE3\xEA\xEC\xF3\xF5\xFE\x106"+
		"\x10E\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace VANTLR
